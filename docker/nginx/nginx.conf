worker_processes  auto;

events {
  worker_connections  4096;
}

http {
  client_max_body_size 50M;

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /dev/stdout main;
  error_log   /dev/stderr warn;

  # Netzwerk-/I/O-Tweaks
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 15s;
  keepalive_requests 1000;

  # Dateimetadaten-Caching (spart stat()-Syscalls)
  open_file_cache          max=10000 inactive=60s;
  open_file_cache_valid    2m;
  open_file_cache_min_uses 2;
  open_file_cache_errors   on;

  # Sicherheit/Noise
  server_tokens off;

  # Kompression
  gzip on;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_vary on;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
      text/plain text/css text/javascript application/javascript
      application/json application/xml image/svg+xml application/xml+rss
      application/wasm;
  gzip_comp_level 6;

  # Statische .gz ausliefern, wenn vorhanden (aus Build-Stufe)
  gzip_static on;

  # ETag explizit an
  etag on;

  # Arbeiterprozess unter User "nginx" (existiert im Alpine-Image)
  user nginx;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /usr/share/nginx/html/;
    index index.html;

    sendfile on;
    default_type  application/octet-stream;

    gzip on;
    gzip_http_version 1.1;
    gzip_disable      "MSIE [1-6]\.";
    gzip_min_length   256;
    gzip_vary         on;
    gzip_proxied      expired no-cache no-store private auth;
    gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level   9;

    # Healthcheck
    location = /healthz {
      add_header Cache-Control "no-store" always;
      return 200 'ok';
    }

    # --- SPA-Router ---
    location / {
      try_files $uri $uri/ /index.html?$args;
    }

# --- Caching-Regeln ---

    # 1) index.html nie cachen (App-Shell immer frisch)
    location = /index.html {
      add_header Cache-Control "no-store, no-cache, must-revalidate" always;
      add_header Pragma "no-cache" always;
      try_files $uri =404;
    }

    # 2) Angular SW/Worker-Dateien: ebenfalls nicht cachen
    location ~* ^/(?:ngsw\.json|ngsw-worker\.js|safety-worker\.js|worker-basic\.min\.js)$ {
      add_header Cache-Control "no-store, no-cache, must-revalidate" always;
      try_files $uri =404;
    }

    # 3) Fingerprinted Assets: 1 Jahr + immutable
    location ~* \.(?:js|mjs|css|woff2|woff|ttf|eot|svg|png|jpg|jpeg|gif|webp|wasm)$ {
      add_header Cache-Control "public, max-age=31536000, immutable" always;
      add_header Vary "Accept-Encoding" always;
      try_files $uri =404;
    }

    # 4) Sonstige statische Dateien: moderate TTL
    location ~* \.(?:json|txt|xml|webmanifest|ico)$ {
      add_header Cache-Control "public, max-age=3600" always;
      add_header Vary "Accept-Encoding" always;
      try_files $uri =404;
    }

  }

}
